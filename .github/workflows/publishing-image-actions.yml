name: Publishing image to Docker Hub and GitHub Packages

on:
  push:
    tags:
      - v*.*.*

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          tags: true

      - name: Extract version and check if current is latest or latest major
        id: version
        run: |
          echo "GITHUB_REF_NAME: $GITHUB_REF_NAME"

          VERSION="${GITHUB_REF_NAME#v}"
          MAJOR=$(echo "$VERSION" | cut -d'.' -f1)
          MINOR=$(echo "$VERSION" | cut -d'.' -f2)
          PATCH=$(echo "$VERSION" | cut -d'.' -f3)

          echo "VERSION: $VERSION"
          echo "MAJOR: $MAJOR"
          echo "MINOR: $MINOR"
          echo "PATCH: $PATCH"

          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "major=$MAJOR" >> $GITHUB_OUTPUT
          echo "minor=$MINOR" >> $GITHUB_OUTPUT
          echo "patch=$PATCH" >> $GITHUB_OUTPUT

          CURRENT="v$VERSION"
          LATEST=$(git tag --sort=-v:refname | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | head -n1)
          MAJOR_LATEST=$(git tag --sort=-v:refname | grep -E "^v$MAJOR\.[0-9]+\.[0-9]+$" | head -n1)

          echo "CURRENT: $CURRENT"
          echo "LATEST: $LATEST"
          echo "MAJOR_LATEST: $MAJOR_LATEST"
          
          echo "is_latest=false" >> $GITHUB_OUTPUT
          echo "is_major_latest=false" >> $GITHUB_OUTPUT

          if [ "$CURRENT" = "$LATEST" ]; then
            echo "is_latest=true" >> $GITHUB_OUTPUT
          fi

          if [ "$CURRENT" = "$MAJOR_LATEST" ]; then
            echo "is_major_latest=true" >> $GITHUB_OUTPUT
          fi

      - name: Show variables
        id: show
        run: |
          echo "GITHUB_REF_NAME: $GITHUB_REF_NAME"
          echo "VERSION: ${{ steps.version.outputs.version }}"
          echo "MAJOR: ${{ steps.version.outputs.major }}"
          echo "MINOR: ${{ steps.version.outputs.minor }}"
          echo "PATCH: ${{ steps.version.outputs.patch }}"

          echo "is_latest: ${{ steps.version.outputs.is_latest }}"
          echo "is_major_latest: ${{ steps.version.outputs.is_major_latest }}"

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ github.repository }}
            ${{ github.repository }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}},enable=${{ steps.version.outputs.is_major_latest }}
            type=raw,value=latest,enable=${{ steps.version.outputs.is_latest }}
          flavor: |
            latest=false

      - name: Build and push Docker images
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
